<!DOCTYPE html>
<html>
<head>
  <title>Ex18: D3</title>
  <style>
    
    h1{color:darkgoldenrod;
      font-family:verdana;
      font-size:45px;
      text-align:center}
    
    h2{color:#676767;
      font-family:verdana;
      text-align: center;
      font-size:30px}
      
    h3{color:#676767;
      font-family:verdana;
      font-size:20px}
      
    p1 {color:black;
      font-family:arial;
      font-size:17px}
      
    p2 {color:black;
      font-family:arial;
      font-size:14px;
      font-style: italic}
    
    body{background-color:#e7e7e7;
        width:700px;
        text-align: center;
        vertical-align: middle;
        margin: auto}
    
    body1{background-color:#e7e7e7;
        width:700px;
        text-align: left;
        vertical-align: middle;
        margin: auto}
    
    div{vertical-align: middle;
      margin: auto}
    
  </style>
  <meta charset="UTF-8">
  <meta name="description" content="Ex18">
  <meta name="author" content="P.Sar">
	
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.4.0/dist/leaflet.css" /> <script src="https://unpkg.com/leaflet@1.4.0/dist/leaflet.js"></script>
	
<script src="https://code.jquery.com/jquery-3.0.0.js"></script>

  <script src="https://indicator.extension.iastate.edu/classes/leaflet-ajax-gh-pages/dist/leaflet.ajax.min.js"></script>
	
  </head>
<body>
  
  <h1>Exercise 18: D3.js</h1>
  <h3>
    <a href="https://bl.ocks.org/mbostock/4015254" target="_blank">Non-map Example: Zoomable Area Chart</a>
    </h3>

  <p1>
 I like how you can change the look of the whole graph by zooming in and out of the X-axis. This is useful in terms of seeing the graph from a different perspective and also to compare and contrast based on the diffrence scale of the X-axis. The X can also change to other variables than just time, such as countries, regions, people, etc. <br><br>
    
For the D3 code, I think you can change the contents of both the X- and Y- axis in the code because they are both categorized into different variables. Other things can also be changed since all of them are neatly divided into var, such as zoom sensitivity, zoom extent, etc. <br><br><br>
    
  
  <h3>
    <a href="http://xliberation.com/googlecharts/d3flights.html" target="_blank">Map Example: Airline Data</a>
    </h3>

  <p1>
 This is a highly complex map, but I like how it can convey such basic information. It is basically showing flight information from one selected airport to another. Once an airport is clicked, the map shows the connection of all other airports to that one location. When you click on the second airport the graph on the left displays the information based on the flight in and out within those two airports. I think this is another great example how different locations, cities or countries, can be shown to interact with each other to produce different results.<br><br>
    
I am not exactly sure how the code of his map works, but I think that the information of each airport comes from an external site or js. file. The main variables on the website are path, states, arcs and circles which are the main component of the maps. The script for those variables consist of mostly "if or else" function, which basically a binary system of pulling the data from somewhere else. According to description on the website the data comes from Google Fusion and 2012 all US flight data with D3 script acting as the visualization.<br><br><br>
    
    <h3>
    <a href="https://animateddata.co.uk/lab/d3-tree/" target="_blank">Other Example: D3 Tree</a>
    </h3>

  <p1>
 I really like the simplicity of this webpage generating line segments to represent a 2D profile of a tree. I think the tree is generated by random algorithm and the result is being linked together with D3. Since it technically does not use any external data to generate the tree, the description says that it is not necessarily a "data visualization", but rather a "generative art."<br><br>
    
The code for this perhaps lies mainly on the random key generator, and the rest is simply binded into line segments to look like a tree. Each line segment is then made into each branch of the tree, which consists of start point, angle, length, and parent. The random starting point would set different path for the rest of the branch section.<br><br><br>
  
    
  
  </p1>

 <h3>Credits</h3> 
  <p2>
Map Data and Script: <a href="https://d3js.org/" target="_blank">D3.js</a> and its <a href="https://github.com/d3/d3/wiki/Gallery" target="_blank">Gallery</a><br>Map Drawn by: Panhavuth Sar<br>Date: 05/09/2019
    
<br><br><br>   
</p2>
</body>
</html>
